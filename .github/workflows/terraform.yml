name: Terraform Lint

on:
  workflow_dispatch: # Allows manual trigger from any branch

jobs:
  tflint:
    name: TFLint PR commenter
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required for creating branches and PRs
      pull-requests: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Install TFLint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Show TFLint Version
        run: tflint --init

      - name: Configure Git Identity
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "action@github.com"


      - name: Run TFLint and Generate Report
        id: tflint
        run: |
          TARGET_BRANCH="${{ github.ref_name }}"
          TEMP_BRANCH="tflint-report-${TARGET_BRANCH}-$(date +%s)"
          git checkout -b "$TEMP_BRANCH"
          echo "Created temporary branch $TEMP_BRANCH"

          # Create TFLint output
          tflint --recursive --force --format json --chdir . | tee tflint-output.json

          # Generate the report
          echo "### TFLint Analysis Report" > report_content.md
          echo "#### Analysis Details" >> report_content.md
          echo "- **Repository:** \`${{ github.repository }}\`" >> report_content.md
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> report_content.md
          echo "- **Commit:** \`${{ github.sha }}\`" >> report_content.md
          echo "- **Date:** $(date)" >> report_content.md
          echo "" >> report_content.md

          # Process issues and create a formatted output
          TOTAL_ISSUES=$(jq '.issues | length' tflint-output.json)
          if [ "$TOTAL_ISSUES" -eq 0 ]; then
            echo "#### :white_check_mark: No issues found!" >> report_content.md
          else
            echo "#### :warning: Found $TOTAL_ISSUES issue(s)" >> report_content.md
            echo "" >> report_content.md
            echo "<details><summary>Click to see detailed findings</summary>" >> report_content.md
            echo "" >> report_content.md
            echo "| Severity | Rule | File | Line | Message |" >> report_content.md
            echo "|----------|------|------|------|---------|" >> report_content.md
            jq -r '.issues[] | "| \(.rule.severity) | \(.rule.name) | \(.range.filename) | \(.range.start.line) | \(.message) |"' tflint-output.json >> report_content.md
            echo "" >> report_content.md
            echo "</details>" >> report_content.md
          fi

          # Commit the report to the branch
          git add tflint-output.json report_content.md
          git commit -m "Add TFLint report"
          git push -u origin "$TEMP_BRANCH"

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base "${{ github.ref_name }}" \
            --head "$TEMP_BRANCH" \
            --title "TFLint Analysis for Branch ${{ github.ref_name }}" \
            --body "This PR contains the results of a TFLint analysis for branch \`${{ github.ref_name }}\`."

      - name: Post Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr view --json number --jq '.number')
          gh issue comment $PR_NUMBER --body "$(cat report_content.md)"
