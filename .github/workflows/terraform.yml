name: Terraform Lint

on:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  tflint:
    name: TFLint PR commenter
    runs-on: ubuntu-latest

    # Run on branch 'main' for push events, always for schedule
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Install TFlint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Show TFlint Version
        run: tflint --init
      
      - name: Run TFLint and Generate Report
        id: tflint
        run: |
          # Create temporary files for outputs
          echo "summary=Summary of TFLint Findings" >> $GITHUB_OUTPUT
          # Run TFLint recursively with force flag and capture output
          tflint --recursive --force --format json --chdir . | tee tflint-output.json
          # Generate the report content
          echo "### TFLint Analysis Report" > report_content.md
          echo "#### Analysis Details" >> report_content.md
          echo "- **Repository:** \`${{ github.repository }}\`" >> report_content.md
          echo "- **Branch:** \`${{ github.head_ref }}\`" >> report_content.md
          echo "- **PR:** #${{ github.event.pull_request.number }}" >> report_content.md
          echo "- **Commit:** \`${{ github.sha }}\`" >> report_content.md
          echo "- **Date:** $(date)" >> report_content.md
          echo "- **Scan Mode:** Recursive (including all subdirectories)" >> report_content.md
          echo "" >> report_content.md
          # Process issues and create formatted output
          TOTAL_ISSUES=$(jq '.issues | length' tflint-output.json)
          if [ "$TOTAL_ISSUES" -eq 0 ]; then
            echo "#### :white_check_mark: No issues found!" >> report_content.md
          else
            echo "#### :warning: Found $TOTAL_ISSUES issue(s)" >> report_content.md
            echo "" >> report_content.md
            echo "<details><summary>Click to see detailed findings</summary>" >> report_content.md
            echo "" >> report_content.md
            # Create a table header
            echo "| Severity | Rule | File | Line | Message |" >> report_content.md
            echo "|----------|------|------|------|---------|" >> report_content.md
            # Process each issue and add to table
            jq -r '.issues[] | "| \(.rule.severity) | \(.rule.name) | \(.range.filename) | \(.range.start.line) | \(.message) |"' tflint-output.json >> report_content.md
            echo "" >> report_content.md
            echo "</details>" >> report_content.md
            # Add summary by severity
            echo "" >> report_content.md
            echo "#### Summary by Severity" >> report_content.md
            echo "| Severity | Count |" >> report_content.md
            echo "|----------|--------|" >> report_content.md
            jq -r '.issues | group_by(.rule.severity) | .[] | "| \(.[0].rule.severity) | \(length) |"' tflint-output.json >> report_content.md
          fi
          # Save the report content for the next step
          cat report_content.md > tflint-report.md

      - name: Commit Report
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="tflint/report-$(date +'%Y%m%d%H%M%S')"
          git checkout -b "$BRANCH_NAME"
          git add tflint-report.md
          git commit -m "Add TFLint Report"
          git push origin "$BRANCH_NAME"

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh
          
      - name: Create Pull Request using GitHub CLI
        run: |
          BRANCH_NAME="tflint/report-$(date +'%Y%m%d%H%M%S')"
          gh pr create --title "TFLint Report - $(date +'%Y-%m-%d %H:%M:%S')" \
            --body "A new TFLint analysis report has been generated. Please review the report and address any issues found.\nThe report is attached as a file in this PR." \
            --base development \
            --head $BRANCH_NAME
